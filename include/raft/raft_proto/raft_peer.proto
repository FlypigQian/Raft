syntax = "proto3";

service RaftPeerService {
    rpc AppendEntriesRPC (PbAppendEntriesRequest) returns (PbAppendEntriesResponse);
    rpc RequestVoteRPC (PbRequestVoteRequest) returns (PbRequestVoteResponse);
}

message PbAppendEntriesRequest {
    int32 term = 1; /// leader's term.
    string leaderId = 2; /// so follower can redirect clients.
    int32 prevLogIndex = 3; /// index of log entry immeidately preceding new ones.
    int32 prevLogTerm = 4; /// term of prevLogIndex entry
    /// I have no idea which data type it should be, just write like this.
    int32 entries = 5; /// log entries to store (empty for heartbeat; may send more than one for efficiency).
    int32 leaderCommit = 6; /// leader's commitIndex.
}

message PbAppendEntriesResponse {
    int32 term = 1; /// currentTerm, for leader to update itself.
    bool success = 2; /// true if follower contained entry matching prevLogIndex and prevLogTerm.
}

message PbRequestVoteRequest {
    int32 term = 1; /// candidate's term.
    string candidateId = 2; /// candidate requesting vote.
    int32 lastLogIndex = 3; /// index of candidate's last log entry.
    int32 lastLogTerm = 4; /// term of candidate's last log entry.
}

message PbRequestVoteResponse {
    int32 term = 1; /// currentTerm, for candidate to update itself.
    bool voteGranted = 2; /// true means candidate received vote.
}